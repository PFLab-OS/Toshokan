#!python
import random
import string
Import('hakase_env friend_elf_env libs containers docker_cmd')

cleanup_containers = AlwaysBuild(hakase_env.Alias('cleanup_containers', [], [
  'docker ps -a -f name=toshokan_qemu_ -q | xargs -L 1 docker rm -f || :',
  'docker network ls -f name=toshokan_net_ -q | xargs -L 1 docker network rm || :',
]))

def generate_test_alias(env, name, depends):
  random_str = ''.join(random.choice(string.ascii_letters) for i in range(10))
  qemu_option = ' '.join([
    '-cpu Haswell',
    '-s',
    '-d cpu_reset',
    '-no-reboot',
    '-smp 5',
    '-m 4G',
    '-D /qemu.log',
    '-loadvm snapshot1',
    '-hda /backing.qcow2',
    '-net nic',
    '-net user,hostfwd=tcp::2222-:22',
    '-serial telnet::4444,server,nowait',
    '-monitor telnet::4445,server,nowait',
    '-nographic',
  ])
  return hakase_env.AlwaysBuild(hakase_env.Alias('test_' + name, [cleanup_containers, containers["qemu"], containers["ssh"]] + depends, [
    'docker network create --driver bridge toshokan_net_{0}'.format(random_str),
    'docker run -d --name toshokan_qemu_{0} --network toshokan_net_{0} --net-alias toshokan_qemu livadk/toshokan_qemu qemu-system-x86_64 {1}'.format(random_str, qemu_option)] +
    docker_cmd('--network toshokan_net_{0} livadk/toshokan_ssh'.format(random_str), 'wait-for-rsync toshokan_qemu') +
    docker_cmd('--network toshokan_net_{0} livadk/toshokan_ssh'.format(random_str), 'rsync build/{0} toshokan_qemu:build/'.format(name)) +
    docker_cmd('--network toshokan_net_{0} livadk/toshokan_ssh'.format(random_str), 'ssh toshokan_qemu sudo build/' + name) +
    ['docker rm -f toshokan_qemu_{0}'.format(random_str)]))
hakase_env.AddMethod(generate_test_alias, "GenerateTestAlias")

test_targets = list(SConscript(dirs=[
  'boot',
  'elf',
  'symbol',
  'clang',
  ]))

# TODO remove build_container
test = AlwaysBuild(hakase_env.Alias('test', [containers["build_hakase"], containers["build_friend"], 'common_test'] + test_targets))
Return('test')